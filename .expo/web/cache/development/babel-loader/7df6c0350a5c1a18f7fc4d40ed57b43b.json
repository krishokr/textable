{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { MapView } from \"react-native-web/dist/index\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GiftedChat, Bubble, InputToolbar, Actions, ActionsProps } from 'react-native-gifted-chat';\nimport { initializeApp } from \"firebase/app\";\nimport { addDoc, collection, getDocs, getFirestore, onSnapshot, where, query, orderBy } from \"firebase/firestore\";\nimport { getAuth, signInAnonymously, onAuthStateChanged } from \"firebase/auth\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport NetInfo from '@react-native-community/netinfo';\nimport \"./fontawesome\";\nimport CustomActions from \"./CustomActions\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreLogs(['Warning: AsyncStorage has been extracted from react-native core']);\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDnVfMWEnDy7xbpWneNJS1lMcpWX5cJKOs\",\n  authDomain: \"textable-4be18.firebaseapp.com\",\n  projectId: \"textable-4be18\",\n  storageBucket: \"textable-4be18.appspot.com\",\n  messagingSenderId: \"802916814412\",\n  appId: \"1:802916814412:web:5cd4b6d194f0b8e1f52ee9\",\n  measurementId: \"G-XYDGNRCN5N\"\n};\nvar app = initializeApp(firebaseConfig);\nvar db = getFirestore(app);\nexport default function Chat(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setmessages = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uid = _useState4[0],\n      setuid = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newMessage = _useState6[0],\n      setnewMessage = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isConnected = _useState8[0],\n      setisConnected = _useState8[1];\n\n  var name = props.route.params.text;\n  var color = props.route.params.color;\n  var messagesCollectionRef = collection(db, \"messages\");\n  useEffect(function () {\n    AsyncStorage.getItem('messages').then(function (res) {\n      return console.log(res);\n    });\n  }, []);\n  useEffect(function () {\n    props.navigation.setOptions({\n      title: name\n    });\n    NetInfo.fetch().then(function (connection) {\n      if (connection.isConnected) {\n        console.log('online');\n        setisConnected(true);\n        var auth = getAuth();\n        var unSubscribe;\n        var authUnsubscribe = onAuthStateChanged(auth, function _callee(user) {\n          var q;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (user) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(signInAnonymously(auth));\n\n                case 3:\n                  setuid(user.uid);\n                  setmessages([]);\n                  q = query(messagesCollectionRef, where(\"uid\", \"==\", user.uid));\n                  unSubscribe = onSnapshot(q, onCollectionUpdate);\n                  return _context.abrupt(\"return\", function () {\n                    authUnsubscribe();\n                    unSubscribe();\n                  });\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      } else {\n        console.log('offline');\n        setisConnected(false);\n        getMessages();\n      }\n    });\n  }, []);\n\n  function getMessages() {\n    var messagesStr;\n    return _regeneratorRuntime.async(function getMessages$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            messagesStr = '';\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('messages'));\n\n          case 4:\n            _context2.t0 = _context2.sent;\n\n            if (_context2.t0) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.t0 = [];\n\n          case 7:\n            messagesStr = _context2.t0;\n            messagesStr === [] ? setmessages([]) : setmessages(JSON.parse(messagesStr));\n            console.log('successfully got messages');\n            _context2.next = 16;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t1 = _context2[\"catch\"](1);\n            console.log('getMessages error: ');\n            console.log(_context2.t1.message);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  }\n\n  function onCollectionUpdate(querySnapshot) {\n    var collectDocs;\n    return _regeneratorRuntime.async(function onCollectionUpdate$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            collectDocs = [];\n            querySnapshot.forEach(function (doc) {\n              var data = doc.data();\n              var obj = {\n                _id: data._id,\n                text: data.text,\n                createdAt: data.createdAt.toDate(),\n                user: data.user,\n                uid: uid\n              };\n              collectDocs.push(obj);\n            });\n            orderMessages(collectDocs);\n            return _context3.abrupt(\"return\", setmessages(collectDocs));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function orderMessages(messagesArr) {\n    return messagesArr.sort(function (a, b) {\n      return b.createdAt - a.createdAt;\n    });\n  }\n\n  function addMessage(messageObj) {\n    var docRef;\n    return _regeneratorRuntime.async(function addMessage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(addDoc(messagesCollectionRef, messageObj));\n\n          case 2:\n            docRef = _context4.sent;\n            return _context4.abrupt(\"return\", docRef);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (uid !== 0 && Object.keys(newMessage).length > 0) {\n      addMessage(newMessage);\n      setnewMessage([]);\n    }\n  }, [newMessage, uid]);\n\n  function saveMessages() {\n    return _regeneratorRuntime.async(function saveMessages$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            console.log('saving messages...');\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('messages', JSON.stringify(messages)));\n\n          case 4:\n            console.log('successfully saved messages');\n            _context5.next = 11;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log('error in saveMessages: ');\n            console.log(_context5.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  function deleteMessages() {\n    return _regeneratorRuntime.async(function deleteMessages$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('messages'));\n\n          case 3:\n            setmessages([]);\n            _context6.next = 9;\n            break;\n\n          case 6:\n            _context6.prev = 6;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0.message);\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }\n\n  useEffect(function () {\n    if (messages.length > 0) {\n      saveMessages();\n    }\n  }, [messages]);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    console.log('onSend is called!');\n    console.log('messages in onSend: ');\n    console.log(messages);\n\n    var formattedMsg = _objectSpread(_objectSpread({}, messages[0]), {}, {\n      uid: uid\n    });\n\n    setnewMessage(formattedMsg);\n    setmessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  function renderBubble(props) {\n    console.log('This is the props in renderBubble: ');\n    console.log(props.currentMessage);\n    return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n      wrapperStyle: {\n        right: {\n          backgroundColor: '#000'\n        }\n      }\n    }));\n  }\n\n  function _renderInputToolbar(props) {\n    return isConnected ? _jsx(InputToolbar, _objectSpread(_objectSpread({}, props), {}, {\n      placeholderTextColor: \"#000\",\n      containerStyle: styles.textBar\n    })) : null;\n  }\n\n  function renderCustomActions(props) {\n    return _jsx(CustomActions, _objectSpread({}, props));\n  }\n\n  function renderCustomView(props) {\n    var currentMessage = props.currentMessage;\n\n    if (currentMessage.location) {\n      console.log('This is current location in renderCustomView: ');\n      console.log(currentMessage.location.latitude);\n      return _jsx(MapView, {\n        style: {\n          width: 150,\n          height: 100,\n          borderRadius: 13,\n          margin: 3\n        },\n        region: {\n          latitude: currentMessage.location.latitude,\n          longitude: currentMessage.location.longitude,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        }\n      });\n    }\n\n    return null;\n  }\n\n  return _jsx(View, {\n    style: [styles.container, {\n      backgroundColor: color\n    }],\n    children: _jsxs(View, {\n      style: styles.chat,\n      children: [_jsx(GiftedChat, {\n        messages: messages,\n        onSend: function onSend(newMessages) {\n          return _onSend(newMessages);\n        },\n        user: {\n          _id: 1\n        },\n        renderBubble: renderBubble,\n        renderInputToolbar: function renderInputToolbar(props) {\n          return _renderInputToolbar(props);\n        },\n        renderActions: renderCustomActions,\n        renderCustomView: renderCustomView\n      }), Platform.OS === 'android' ? _jsx(KeyboardAvoidingView, {\n        behavior: \"height\"\n      }) : null]\n    })\n  });\n}\nvar styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  chat: {\n    flex: 1,\n    width: '100%',\n    padding: '5%'\n  },\n  textBar: {\n    borderRadius: 20,\n    opacity: 0.8\n  }\n};","map":{"version":3,"sources":["/Users/krishokr/textable/components/Chat.js"],"names":["MapView","React","useState","useEffect","useCallback","GiftedChat","Bubble","InputToolbar","Actions","ActionsProps","initializeApp","addDoc","collection","getDocs","getFirestore","onSnapshot","where","query","orderBy","getAuth","signInAnonymously","onAuthStateChanged","AsyncStorage","NetInfo","CustomActions","LogBox","ignoreLogs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","Chat","props","messages","setmessages","uid","setuid","newMessage","setnewMessage","isConnected","setisConnected","name","route","params","text","color","messagesCollectionRef","getItem","then","res","console","log","navigation","setOptions","title","fetch","connection","auth","unSubscribe","authUnsubscribe","user","q","onCollectionUpdate","getMessages","messagesStr","JSON","parse","message","querySnapshot","collectDocs","forEach","doc","data","obj","_id","createdAt","toDate","push","orderMessages","messagesArr","sort","a","b","addMessage","messageObj","docRef","Object","keys","length","saveMessages","setItem","stringify","deleteMessages","removeItem","onSend","formattedMsg","previousMessages","append","renderBubble","currentMessage","right","backgroundColor","renderInputToolbar","styles","textBar","renderCustomActions","renderCustomView","location","latitude","width","height","borderRadius","margin","longitude","latitudeDelta","longitudeDelta","container","chat","newMessages","Platform","OS","flex","display","alignItems","justifyContent","padding","opacity"],"mappings":"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","sourcesContent":["import { View, Text, Platform, KeyboardAvoidingView, MapView  } from 'react-native'\nimport React, {useState, useEffect, useCallback} from 'react';\nimport { GiftedChat, Bubble, InputToolbar, Actions, ActionsProps } from 'react-native-gifted-chat';\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { addDoc, collection, getDocs, getFirestore, onSnapshot, where, query, orderBy } from \"firebase/firestore\";\nimport { getAuth, signInAnonymously, onAuthStateChanged } from \"firebase/auth\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport NetInfo from '@react-native-community/netinfo';\nimport './fontawesome';\nimport CustomActions from './CustomActions';\n\n//Ignores warning due to expo and async storage\nimport {LogBox} from 'react-native';\nLogBox.ignoreLogs(['Warning: AsyncStorage has been extracted from react-native core']);\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDnVfMWEnDy7xbpWneNJS1lMcpWX5cJKOs\",\n  authDomain: \"textable-4be18.firebaseapp.com\",\n  projectId: \"textable-4be18\",\n  storageBucket: \"textable-4be18.appspot.com\",\n  messagingSenderId: \"802916814412\",\n  appId: \"1:802916814412:web:5cd4b6d194f0b8e1f52ee9\",\n  measurementId: \"G-XYDGNRCN5N\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n\n\nexport default function Chat(props) {\n  const [messages, setmessages] = useState([]);\n  const [uid, setuid] = useState(0);\n  const [newMessage, setnewMessage] = useState({});\n  const [isConnected, setisConnected] = useState(true);\n  const name = props.route.params.text;\n  const color = props.route.params.color;\n  const messagesCollectionRef = collection(db, \"messages\");\n\n\n  useEffect(() => {\n    AsyncStorage.getItem('messages').then(res => console.log(res));\n  }, [])\n  \n\n  useEffect(() => {\n    props.navigation.setOptions({ title: name });\n\n    NetInfo.fetch().then(connection => {\n      if (connection.isConnected) {\n        console.log('online');\n        setisConnected(true);\n\n      const auth = getAuth();\n      let unSubscribe;\n\n      const authUnsubscribe = onAuthStateChanged(auth, async (user) => {\n        \n        if (!user) {\n          await signInAnonymously(auth);\n        } \n\n        setuid(user.uid);\n        setmessages([]); \n\n\n        const q = query(messagesCollectionRef, where(\"uid\", \"==\", user.uid));\n      \n        unSubscribe =  onSnapshot(q, onCollectionUpdate);\n        \n        return () => {\n          authUnsubscribe();\n          unSubscribe();\n        }\n        \n      });\n\n      } else {\n        console.log('offline');\n        setisConnected(false);\n        getMessages();\n\n      }\n    })\n  },[])\n\n  \n\n  async function getMessages() {\n    let messagesStr = '';\n    try {\n      \n      messagesStr = await AsyncStorage.getItem('messages') || [];\n   \n      (messagesStr === []) ? setmessages([]) : setmessages(JSON.parse(messagesStr));\n\n      console.log('successfully got messages')\n\n    } catch (error){\n      console.log('getMessages error: ')\n        console.log(error.message);\n    }\n  }\n\n  async function onCollectionUpdate(querySnapshot) {\n\n    let collectDocs = [];\n\n    querySnapshot.forEach( doc => {\n      let data = doc.data();\n      let obj = {_id: data._id, text: data.text, createdAt: data.createdAt.toDate(), user: data.user, uid};\n      collectDocs.push(obj);\n    });\n\n    orderMessages(collectDocs);\n\n    return setmessages(collectDocs);\n  }\n\n  function orderMessages(messagesArr) {\n    return messagesArr.sort((a,b) => b.createdAt - a.createdAt);\n  }\n\n  async function addMessage(messageObj) {\n    \n    const docRef = await addDoc(messagesCollectionRef, messageObj);\n    \n    return docRef\n  }\n\n  useEffect(() => {\n    //waits until the uid and the newMessage states have been updated to add a new message\n    if ((uid !== 0) && (Object.keys(newMessage).length > 0)) {\n      addMessage(newMessage);\n      setnewMessage([]);\n    }\n  },[newMessage, uid]);\n\n  async function saveMessages() {\n    try {\n      console.log('saving messages...');\n\n      // console.log(JSON.stringify(messages));\n      await AsyncStorage.setItem('messages', JSON.stringify(messages));\n        \n      console.log('successfully saved messages');\n    } catch(error) {\n      console.log('error in saveMessages: ');\n      console.log(error.message);\n    }\n  }\n\n\n  async function deleteMessages() {\n    try {\n      await AsyncStorage.removeItem('messages');\n      setmessages([]);\n    } catch(error) {\n      console.log(error.message);\n    }\n  }\n\n  //Saves messages to local storage once messages are set in onSend\n  useEffect(() => {\n    if (messages.length > 0) {\n      saveMessages();\n    }\n  }, [messages])\n\n  const onSend = useCallback((messages = []) => { \n    console.log('onSend is called!')\n    console.log('messages in onSend: ')\n    console.log(messages);\n    let formattedMsg = {...messages[0], uid};\n    setnewMessage(formattedMsg);\n    setmessages(previousMessages => GiftedChat.append(previousMessages, messages))\n    \n  }, []);\n\n  \n  \n  function renderBubble(props) {\n    console.log('This is the props in renderBubble: ')\n    console.log(props.currentMessage);\n    return <Bubble {...props} wrapperStyle={{ right: \n      { backgroundColor: '#000' }\n    }}/>\n  }\n\n  function renderInputToolbar(props) {\n    return (isConnected) ? <InputToolbar {...props} placeholderTextColor='#000' containerStyle={styles.textBar} /> : null\n  } \n\n\n\n  function renderCustomActions(props) {\n    return <CustomActions {...props}/>\n  }\n\n\n  function renderCustomView(props) {\n    const {currentMessage} = props;\n   \n    if (currentMessage.location) {\n      console.log('This is current location in renderCustomView: ')\n      console.log(currentMessage.location.latitude);\n      return <MapView style={{width: 150,\n        height: 100,\n        borderRadius: 13,\n        margin: 3}}\n      region={{\n        latitude: currentMessage.location.latitude,\n        longitude: currentMessage.location.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421,\n      }}/>\n    }\n    return null\n  }\n  \n  \n  return (\n    <View style={[styles.container, {backgroundColor: color}]}>\n      <View style={styles.chat}>\n        <GiftedChat \n        messages={messages} \n        onSend={newMessages => onSend(newMessages)} \n        user={{_id: 1}} \n        renderBubble={renderBubble} \n        renderInputToolbar={props => renderInputToolbar(props)}\n        renderActions={renderCustomActions}\n        renderCustomView={renderCustomView}\n        />\n\n        { Platform.OS === 'android' ? <KeyboardAvoidingView behavior=\"height\" /> : null}\n      </View>\n      \n    </View>\n  )\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  chat: {\n    flex: 1,\n    width: '100%',\n    padding: '5%'\n  },\n  textBar: {\n    borderRadius: 20,\n    opacity: 0.8\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}